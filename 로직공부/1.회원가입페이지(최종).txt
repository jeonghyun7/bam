#회원가입페이지(sign_up.jsp)#

 @@@스크립트관련@@@
1. 이메일 중복확인

custom-signup.js의 자바스크립트에서 정규표현식을 통하여 올바른 이메일 형식인지 
(1)확인과정을 거친후 올바른 이메일이면 ajax를 활용- email_check.wcc를 맵핑하여 로직따라 데이터베이스까지 가서 
(2) 기존 이메일 존재유무를 판단하고 유_1 무_0을 int형 count 반환시켜 사용가능한 아이디인지
/이미 사용중인 아이디인지  반환값에 따라 스크립트 구문을 통하여 표시해준다.

2. 비밀번호

비밀번호 input 박스에서 key를 떼었을 때 custom-signup.js의 스크립트 구문에서 checkPassword함수가 발동되며 
정규표현식을 통하여 숫자,영문자,특수문자 조합으로 8자리 이상인지 판단후 
sign_up.jsp의 id="pwd-danger"구문인 비밀번호는 8자리 이상의 문자, 숫자, 특수문자로 구성하여야합니다 라는 hide()된 구문을 show()함
 제대로된 형식 일 경우 true값을 반환. 
/ 같은 문자나 숫자를 4번이상 입력했을 경우 alert을 이용하여 같은 문자 숫자4번 이상 사용X라는 경고메시지 를 띄우는 스크립트문도 존재
 - 비밀번호 재확인 스크립트도 custom-sigup.js의 스크립트문을 통하여 일치시 불일치시 각각의 숨겨진 문구를 띄워줌

3. 개인정보 수집 / 서비스 이용약관

(1) 체크박스에 체크시 onClick이벤트 발생하여 custom-signup.js 의 checked_box()라는 함수발동함
 - 체크하면 value(첫번째체크박스 value==13 두번째 체크박스 value==14) 값이 들어오고 check1과 check2가 false에서 true로 바뀜
#sign-up-btn이라는 id값 즉, 회원가입버튼은 check1과 check2가 모두 true이면 회원가입버튼의 
disabled속성을 false로 바꿔주며 활성화 및 색상변경 / else일경우 비활성화.
(2) 보기(id="aid") button클릭시 data-toggle="collapse"을 이용하여 숨겨진 부분이 열리는것
(부트스트랩4의 "collapse"클래스 스타일은 정보를 안보이도록 접어 놓았다가 클릭하면 펼쳐져서 보이게하는 기능입니다.)
$('#aid').click(function() 보기버튼 클릭시 이벤트 발생 /바로 그 다음 $('#textfile').load('/common/text.txt', function(p1, p2, p3) id값이
 textfile인 부분에 해당 경로 부분 파일의 글을 불러와서 보여줌.

4. 회원가입 버튼
- custom-signup.js파일 참조
sign_up.jsp회원가입버튼 클릭시 onclick="submit_form();"이벤트 발생 
js파일의 submit_form()스크립트 함수구문 실행하여 pwd값 pwdcheck값 current_email값을 넣고 if문을 통해 
조건(비밀번호일치 이고 check1,2가 체크되어있고, 중복확인했고, 현재의 email과 처음 등록한 email이) 일치하면 
##sign_up.jsp의 회원가입전체폼 id인 sign-up-form에 저장!!##

<!-- sign_up.jsp에는 가장 아래에 위로가기 아이콘 태그도 있습니다~
start back-to-top -->
<div id="back-to-top">
	<i class="fa fa-angle-up" title="Go top"></i>
</div>
<!-- end back-to-top
 -->



@@@백관련@@@ 
1. 회원가입 버튼을 클릭하면 바로위의 4.을 통하여 id값이 sign-up-form인 곳에 모든 데이터를 담은
form태그가 post방식으로 "sign_up.bam"인 url으로 보냄 ->SignUpController.java로 이동

*알아둬야할기본개념*
(1)@ModelAttribute는 스프링에서 JSP파일에 반환되는 Model 객체에 속성값을 주입하거나 바인딩할 때 사용되는 어노테이션이다.
 +컨트롤러 메서드의 인수에 어노테이션을 부착하는 경우
@ModelAttribute을 써서 HTTP 요청에 들어있는 속성값들을 Member 커맨드 객체에 자동적으로 바인딩 하게 된다. 

(2)RedirectAttributes(redirect 객체 전달)
rttr.addFlashAttribute로 전달한 값은 url뒤에 붙지 않는다. 
일회성이라 리프레시할 경우 데이터가 소멸한다.

2. SignUpController.java
의 맵핑된 sign_up.bam이 있는 메서드가 수행
(1) getParameter로 회원가입시 입력한 realemil을 String email에 저장
(2) 초기등급 String grade = "silver"로 member.setGrade(grade)저장
(3)rttr.addFlashAttribute안의 service.signUp(member, response)부분을 통하여 MemberServiceImpl.java로 이동
(4)MemberServiceImpl.java의 signUp메서드 실행
(5)내가 회원가입시 입력한 email 즉, member.getEmail()을 가지고 lMemberMapper.select)leave_member로 이동
(6) LMemberMapper.java로 이동하고 바로 LMemberMapper.xml로 이동하여 탈퇴회원조회 SQL문을 통해
L_MEMBER(탈퇴회원테이블)에 겹치는 email이있는지 확인 후 , LMember형으로 반환
(7)LMember형을 품고 로직반대로 다시 돌아가서 (4)의MemberServiceImpl.java까지 돌아오고 LMember leave_member 변수에 넣는다.

(8) 간단히 말해, MemberServiceImpl에서는 내가 가입시 입력한 이메일과 동일한 이메일을가졌던 탈퇴회원이 있는지
확인후 있으면 탈퇴회원의 정보를 삭제 한후 밑에 구문 실행 없으면 바로 밑에 구문실행

(9)바로 밑의 구문은 create_key()를 통하여 얻은 8자리 랜덤숫자의 Key를 반환하여 member.setApproval_key멤버의 승인키를 지정
그 이후 memberMapper.signUp(member)를 통하여 MemberMapper.java->MemberMapper.xml의 id=signUp인
회원가입 SQL문실행하여 회원정보를 insert한다.

(10)이어서 MemberServiceImpl로 돌아와서 send_mail(member, "join")을 통하여 인증메일 발송 후 
아래 return 값 1을 가지고 최종적으로 SignUpController.java로 돌아가서 "result", 1 결과는 1반환 하고 
return 리다이렉트에 결과 1로 반환
send_mail()구문은 create_key()바로 밑에 있음(이메일발송부분은 따로 자세히 봐볼것)

###################이메일발송부분인 sendMail관련로직#############################################
send_mail메서드를 살펴봐보면 Mail Server를 설정하고 보내는사람의 Email, 제목, 내용 설정뒤
회원가입 메일 내용부분에서 인증버튼을 클릭하면 sign_up/approval_member.bam로 보내는 부분과
메일내용중 회원가입때 사용한 member의 email과 승인키를 hidden값으로 인증버튼에 숨겨서 가져가는 부분이있다.

인증버튼을 클릭하면 페이지는 approval_member메서드의 else문에서 이메일성공했을 경우 스크립트문에 포함된 
"location.href='../';"에 의하여 루트페이지인 localhost:8080/ 메인페이지로 이동하지만 인증버튼자제체 담겨있는 내용들은
sign_up/approval_member.bam로 보내지게 되고 SignUpController.java의 맵핑값이 가르키는 value = "/approval_member.bam"
public void approval_member 메서드 안의 service.approval_member(member, response); 에 따라 
MemberServiceImple.java의  approval_member메서드 실행 그안에서 if문 안의 memberMapper.approval_member(member)
를 찾아감 . Membermapper.xml의 SQL문에서 잘 작동되어 받아온 승인키와 email값을 비교하고 동일하면 update실행후 
1값 반환. 다시 MemberServercieImpl까지 돌아와서 1이반환되면 else문 이메일 인증에 성공했을 경우 인증버튼 눌렀을 시에
alert을 이용하여 인증이 완료되었습니다. 로그인 후 이용하세요가 뜹니다.
##########################################################



