#캠프 상세 페이지에서 예약하기 버튼 클릭#

(1)예약하기 버튼 클릭
-> camp_detail.jsp의 
<div id="booking-event" class="theme-btn d-block" onclick="setSessionAndSubmit()">캠핑장을 선택해주세요</div>
onclick 이벤트에 의해 (select-site.js의 스크립트문을 통해 예약하기라는 문구로 바뀌어있을 것)

(2) 로그인여부 판단
-> camp-detail.js 의 function setSessionAndSubmit(){ 함수 발동
const email = document.getElementById("initMember").value; 1번째 구문은 
camp_detail.jsp의 <input type="hidden" id="initMember" value="${member.email}">
히든값으로 숨겨진 멤버의 email값을 받아서 const email 변수에 대입

if문으로 email값이 null값이면 로그인이 필요합니다를 alert으로 띄우고 null값이 아니면 
아래 구문 이어서 실행

(3) bbq체크박스 이름 설정 및 체크여부 판단하여 요금설정
 2번째 구문은 (변수선언 및 값 대입)
->camp_detail.jsp의 customize-checkbox에 나타나게되는
 (select-site.js의 $(".customize-checkbox").html(checkBox_html); 구문안의 checkBox_html안에 
class='chec-bbq'인 체크박스 value값은 bbqPrice) 
var checkbbq =check-bbq의 체크박스이름대입

var isBbqChecked = $(checkbbq).is(":checked");는
checkbbq값이 참인지 거짓인이 판별해주는 jQuery 함수 문법 즉, 체크여부 true or false

3번째로는
if else문을 통하여 isBbqChecked값이 true 즉 체크 되어있으면 bbq_fee요금을 bbqPrice에 대입하고
false 즉, 체크 되어있지 않으면 bbqPrice = 0 을 대입합니다.

(4) 예약정보(bookingInfo)변수에 JSON 형태로 값대입
var bookingInfo = {
		campIdx : document.getElementById('campIdx').value, //캠핑장 번호
		campName : campName,			       //캠핑장 이름	
		address : document.getElementById("address").value,  //캠핑장 주소
		campZone : campZone,			       //캠핑장 구역(SITE_NAME)
		peopleNum : document.getElementById('peopleNum').value, //캠핑장 인원수
		category : category,			      // 캠핑장 구역종류(SORT_NAME)
		campPrice : campPrice,			      // 캠핑장 요금
		bbqPrice : bbqPrice,			      // 바베큐 요금
		checkDate : document.getElementById('checkDate').value, //체크인아웃 날짜
		sort_idx : sort_idx				     // 캠핑장 구역 번호(pk)
	};

@@%알아두기%@@
sessionStorage.setItem("bookingInfo", JSON.stringify(bookingInfo));
세션 스토리지(브라우저저장소/데이터저장의 목적이 아닌 휘발성 데이터를 저장하기 위한 목적으로 사용)
는 모든 값을 문자로 저장합니다. value의 위치에는 문자열이 올 수 있는데
자바스크립트에서 객체, 배열 또는 그 외 다른 타입을 쉽게 문자열로 만들어주는 JSON.stringify()가 있다.
stringify()로 객체를 문자열로 만들어 저장하고 값을 가져올때는 JSON.parse()로 원래의 타입으로 복구 하면 된다.

var sessionItem = JSON.parse(sessionStorage.getItem("bookingInfo"));
sessionItem변수에 원래의 타입으로 복구하여 값을 가져와서 대입한다.

그러고나서 location.href = "../booking/booking.bam"; 맵핑을 통해 이동한다.
 
-> 
(5) BookingController.java의 
@RequestMapping("booking.bam")
	private String booking() {
		return "client/booking/booking/"+WebTitle.TITLE+"예약";
	}
실행되어 booking.jsp 뷰가 열림.
---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
#예약확인 페이지에서 열릴때!!!#

(1) custom-booking.js
*camp-detail.js의 function setSessionAndSubmit(){ 함수안에서
세션 스토리지에 키 bookingInfo 값 json형태의 var bookinginfo를 문자열로 변경하여 저장해두었던 값을 꺼내어

::const sessionItem = JSON.parse(sessionStorage.getItem("bookingInfo")); sessionItem이라는 컨스트 변수에 저장.
 나머지 변수들에도 0값으로 초기화 설정함
(위에서 설명한 stringify()로 객체를 문자열로 만들어 저장하고 
값을 가져올때는 JSON.parse()로 원래의 타입으로 복구 하면 된다. 에 해당함)

$(document).ready(function(){

::booking.jsp에서 mypoint를 가져와 계산에 사용하기 위해서 숫자형으로 바꾸어줌
::로컬스토리지에 저장된 thumb (이미지파일이름)과 별점도 가져와 변수에 저장

::booking.jsp의 id값 camp_thumb에 src 경로 속성을 지정
::id값 avgStar부분에 평점 반영
::캠핑장이름을 sessionItem에서 꺼내와 id값 campName에 반영하고 나타내줌
::캠핑장 주소도 동일

::sessionItem에서 dateTemp를 -로 쪼개어 0인덱스 1인덱스로 나누고 ex) 2022/10/12와 2022/10/13으로 나눔
 checkInDate와 checkOutDate 각각 변수에 넣어줌
아무튼 이 구문들을 통해 몇박 몇일인지 구하여 booking.jsp의 .booking_date 클래스에 나타내줌

::인원수 나타내줌~
:: night박 만큼 곱하여 캠핑장요금 설정해서 나타내줌~

어찌됬던 여기까지 잘 따라왔다면 custom-booking.jsp의 지금 이부분들에서는 뷰에 보여지는 값들을 변수에
넣어주고 그것을 .append나 .text로 나타내주고있다는 것을 알게되었을 것임.

그리고 아래로 조금 내려오다보면 모든체크박스가 체크되었을때 결제하기 버튼이 활성화 되는 함수도 볼 수 있을 것임

그리고 각 약관은 보기버튼 클릭하였을때 /common/privay.txt의 글들을 .load해와서 .toggle로 나타내주는 함수도있고

예약자 전화번호 입력시에 하이픈 표시 해주는 것도 볼 수 있음~그것을 또 아래에서 .onkeyup이벤트를 통해서
바로 반영해서 적용하기도 함~

이해안되는 구문 있으시면 물어봐주세요~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
------------------------------------------------------------------------------------------------------------------------














