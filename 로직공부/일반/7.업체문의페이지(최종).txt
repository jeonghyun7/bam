#업체 문의 작성페이지 띄우기전#
#######################
*client_header.jsp의 사이드메뉴에서 업체문의 클릭 시 owner/com_inquiry.bam 이동

(1) OwnerController.java
 :: @RequestMapping(value = "com_inquiry.bam", 맵핑된
 :: private ModelAndView comInquiry() { 메서드 실행
 - 세션에서 member속성을 가져와서 if,else구문을 만나 로그인여부 확인
 - 로그인 했을 경우 else문 실행하게 됨 / 일단 ModelAndview response 저장소에
이동할 페이지 설정해주고, 
 - else문 안에 int result = ownerService.checkInquiryService(member); 구문실행

(2) OwnerServiceImpl.java
 :: public int checkInquiryService(Member member) { 메서드 실행
 - 그 안의 List<Inquiry> list = ownerMapper.selectInquiryOne(member.getEmail());
구문을 실행하게 되는데 로그인한 회원의 이메일을 매개변수로 가지고 매퍼파일찾아감

(3) OwnerMapper.java /  OwnerMapper.xml
 ::<select id="selectInquiryOne" resultType="Inquiry" parameterType="String">
		select * from INQUIRY where EMAIL = #{email}
	</select>
 - SQL문을 통해 문의테이블에서 회원의 이메일로 작성한 문의를 모두 뽑아줌
 - 반환 타입은 Inquiry이므로 Inquiry.java를 참고할 것
 - 반환 값들을 가지고 OwnerServiceImpl.java로 돌아감

(4) OwnerServiceImpl.java
 -  List<Inquiry> list = 반환값들이 여러개 있을수 있으므로 list 로 받습니다.
 -  첫 if문을 통하여 list의 사이즈가 0보다 크면 그안의 이중 if문이 실행
 - 첫if문에서 0보다 작으면 else문으로 return 3;
 -  이중if문에서는 리스트의 0인덱스의 S_no(문의대기1 문의완료2) 가 1이면 1반환
 - 1이 아니면 else문을통해 2 반환

 - 1or2or3 이라는 반환 값을 가지고 컨트롤러로 이동(1-문의대기 / 2-문의완료 / 3- 문의없음)

(5) OwnerController.java
 :: int result = 에 가져온 각 반환 값을 넣어주고 
 :: response 저장소에 continue , result 형태의 객체 추가 하고 뷰로 반환

(6) com_inquiry.jsp
 :: <script>
	$(document).ready(function(){
 - 페이지가 준비될때 함수 실행되는 스크립트의 제이쿼리구문이 실행
 - 세션에서 member속성을 가져와서 첫 if문에서 로그인 여부를 확인하고
 - 두번째 if문과 세번째 if 문에서는 컨트롤러에서 저장소에 넣은 반환 값으로
 1일때는 문의대기 상태이므로 이미작성하신 문의가 아직 처리 되지 않았습니다. 를 띄우며 메인페이지로 이동.
 2일때는 문의 완료 상태이므로 업체문의 처리가 이미 완료 되었습니다. 를 띄우며 마이페이지로 이동.
 3일때는 걸리는 if, else문이 없으니 페이지가(com_inquiry.jsp) 잘 켜지겠쥬?
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
#업체 문의 작성페이지#
#######################
(1) com_inquiry.jsp

+이메일은 로그인되어있는 회원의 이메일값을 받아 넣고 readonly 속성걸어줌
---------------------------------------------------
+다음주소검색 API + 지도API@@
@@@@@@@@@@@@@@@@@
 ::부연설명 - 주소찾기/우편번호 API는 따로 키발급이 필요없고,
 :: <script
 src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
스크립트 작성으로 링크 연결해주고,

 :: new daum.Postcode({
		oncomplete : function(data) {
구문을 통해 활용할 수 있다.
우리는 function 안에 지도 api를 같이 활용할 수 있도록 작성하였다.

:: 주소검색 버튼 클릭시 onclick="sample5_execDaumPostcode()" 이벤트 발생
 -> jsp 파일안의 스크립트문 중 function sample5_execDaumPostcode() { 함수 찾아감
 -> new daum.Postcode({ 으로 주소 찾기,우편번호서비스를 띄워주고
 -> document.getElementById("sample5_address").value = addr;
구문을 통해 입력받은 주소를 텍스트박스안에 넣어서 뷰의 박스안에 채워주고
 -> data 즉, 입력받은 주소 값을 바탕으로 지도API와 연계하여 주소정보를 좌표로받아서
 
function sample5_execDaumPostcode() { 위의 구문에서 id값이 map인 부분에 임시로 그려져있는 지도 부분에
지도 중심과 마커를 반영하여 보여줍니다.
------------------------------------------------------
+ 사업자번호와 회사번호의 하이픈을 정해주는 스크립트가 각각 존재함.
var autoHypenBusinessNum = function(str){ -> 사업자 하이픈 관련
var autoHypenPhone = function(str){ -> 회사번호 하이픈 관련
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
#업체 문의 작성페이지#
#작성하기 버튼 클릭###
#######################
(1) com_inquiry.jsp

 :: onclick="setInputs();">작성하기</button> 업체문의 폼을 모두 채운후에 작성하기 버튼을 클릭하면 해당하는
onclick 이벤트를 찾아 이동합니다.

(2) com-inquiry.js

:: function setInputs(){ 스크립트함수 시작.

해석하자면 업체문의 폼 총 7개의 input박스에 입력받은 값들을 input박스 id값을 통해 가져와서
com_inquiry.jsp의 숨겨진 input박스들의 집합체 form태그(아래쓴 폼태그)에 값대입을 해줍니다.
<form action="inquiry.bam" method="post" id="submit-inquiry">
                    <input type='hidden' name='email' id='email'>
                    <input type='hidden' name='owner_num' id='owner_num'>
                    <input type='hidden' name='com_name' id='com_name'>
                    <input type='hidden' name='com_addr' id='com_addr'>
                    <input type='hidden' name='com_tel' id='com_tel'>
                    <input type='hidden' name='title' id='title'>
                    <input type='hidden' name='content' id='content'>
               </form>

그리고 각 if문을 통하여 히든타입의 input박스들의 각id 값을 통해 값이 없는 
즉, 공백인 input박스를 알려주기 위한 메세지를 나타내주는 함수를 호출합니다. 
function input_empty_msg(check){ <- 이 함수이며 각 메시지들을 html형식으로 나타내줍니다.
 document.getElementById("check-input").innerHTML = msg_html; 

if 문을 모두 거치고 나서 submit();이 실행되면 !!!!!!!

(3) com_inquiry.jsp
의 위에 쓴 폼태그(숨겨진input박스들을 가지고 있는)가 액션에 의해 inquiry.bam 을 찾아갑니다.

(4) OwnerController.java

:: @PostMapping("inquiry.bam")
	private ModelAndView inquiry(Inquiry inquiry) { 
맵핑된 메소드가 실행되며 그안의 
ModelAndView response = ownerService.submitInquiryService(inquiry);
구문에 의해 가르키는 서비스를 찾아갑니다.

(5) OwnerServiceImpl.java

@Override
	public ModelAndView submitInquiryService(Inquiry inquiry) { 
구문이 실행되고 해석하자면 저장소 response를 만들고
해쉬맵객체를 생성하여 받아온 input박스의 값들을 키 값 형태로 저장하고
그 query를 들고
boolean result = ownerMapper.insertInquiry(query);
매퍼파일을 찾아갑니다.

(6) OwnerMapper.xml

<insert id="insertInquiry" parameterType="hashmap">
	insert into INQUIRY values(nextval(INQUIRY_SEQ), #{query.email}, 1, #{query.title}, #{query.owner_num}, #{query.content}, SYSDATE(), #{query.com_name}, #{query.com_addr}, #{query.com_tel})
</insert>
SQL구문에 의해 받아온 모든값들을 문의테이블에 insert-추가합니다!
구문이 잘 실행되었으면 true 실행되지않았으면 false값을 가지고 서비스로 돌아갑니다.

(7) OwnerServiceImpl.java
boolean result = ownerMapper.insertInquiry(query); 
불리안 타입인 result에 insert구문 실행여부에 따라 true/false값을 담고 그것을 
저장소인 response에 담아 리턴하면서 컨트롤러로 돌아갑니다.

(8) OwnerController.java
의
ModelAndView response = ownerService.submitInquiryService(inquiry);
		response.setViewName("client/member/com_inquiry/"+WebTitle.TITLE+"캠핑장 등록");
		return response;
에서 반환 받은 response를 response에 넣어주고 반환할 뷰네임 경로를 통해 뷰 페이지로 (다시) 이동합니다.

(9) com-inquiry.js
다시 뷰페이지를 반환받아서 키기 때문에
뷰가 다시 준비될때 실행되는 제이쿼리인 $(document).ready(function(){ 가 실행되고
if(<%=request.getAttribute("result")%> == true){
		alert("업체 문의가 작성되었습니다.");
		location.href="/";
	}else if(<%=request.getAttribute("result")%> == false){
		alert("업체 문의가 실패하였습니다.");
		location.href="/";
	}
if 문과 elseif 문이 실행되는데 resposne안에 담아 놓은 불리안타입인 result에 담아 놓은 true false 여부에 따른
구문이 alert으로 띄워지고 그 이후 / 로 메인 페이지로 이동합니다.




